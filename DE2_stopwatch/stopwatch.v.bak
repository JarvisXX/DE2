module stopwatch_01(clk, key_reset, key_start_pause, key_display_stop,
						  hex0, hex1, hex2, hex3, hex4, hex5,
						  led0, led1, led2, led3);

	input clk, key_reset, key_start_pause, key_display_stop;
	output [6:0] hex0, hex1, hex2, hex3, hex4, hex5;
	output led0, led1, led2, led3;
	reg led0, led1, led2, led3;

	reg display_work;
	reg counter_work;
	parameter DELAY_TIME=10000000;

	reg [3:0] minute_display_high;
	reg [3:0] minute_display_low;
	reg [3:0] second_display_high;
	reg [3:0] second_display_low;
	reg [3:0] msecond_display_high;
	reg [3:0] msecond_display_low;

	reg [3:0] minute_counter_high;
	reg [3:0] minute_counter_low;
	reg [3:0] second_counter_high;
	reg [3:0] second_counter_low;
	reg [3:0] msecond_counter_high;
	reg [3:0] msecond_counter_low;

	reg [31:0] counter_50M;

	reg reset_1_time;
	reg [31:0] counter_reset;
	reg start_1_time;
	reg [31:0] counter_start;
	reg display_1_time;
	reg [31:0] counter_display;

	reg start;
	reg display;

	sevenseg LED8_minute_display_high(minute_display_high, hex5);
	sevenseg LED8_minute_display_low(minute_display_low, hex4);
	sevenseg LED8_second_display_high(second_display_high, hex3);
	sevenseg LED8_second_display_low(second_display_low, hex2);
	sevenseg LED8_msecond_display_high(msecond_display_high, hex1);
	sevenseg LED8_msecond_display_low(msecond_display_low, hex0);

	always@(posedge clk)
		begin
		if (key_reset)
			reset_1_time = 1;
		else if (!key_reset && reset_1_time==1)
			minute_display_high=4'b0000;
			minute_display_low=4'b0000;
			second_display_high=4'b0000;
			second_display_low=4'b0000;
			msecond_display_high=4'b0000;
			msecond_display_low=4'b0000;
			minute_counter_high=4'b0000;
			minute_counter_low=4'b0000;
			second_counter_high=4'b0000;
			second_counter_low=4'b0000;
			msecond_counter_high=4'b0000;
			msecond_counter_low=4'b0000;
		end
endmodule

module sevenseg(data, ledsegments);
	input [3:0] data;
	output ledsegments;
	reg [6:0] ledsegments;
	
	always@(*)
		case data
			0: ledsegments=7'b100_0000;
			1: ledsegments=7'b111_1001;
			2: ledsegments=7'b010_0100;
			3: ledsegments=7'b011_0000;
			4: ledsegments=7'b001_1001;
			5: ledsegments=7'b001_0010;
			6: ledsegments=7'b000_0010;
			7: ledsegments=7'b111_1000;
			8: ledsegments=7'b000_0000;
			9: ledsegments=7'b001_0000;
			default: ledsegments=7'b111_1111;
		endcase
endmodule
